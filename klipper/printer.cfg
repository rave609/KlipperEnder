# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.
# ======================================================================

[include mainsail.cfg]
[include includes.cfg]
# This line includes all the standard macros.
[include klipper-macros/*.cfg]
# Uncomment to include features that require specific hardware support.
# LCD menu support for features like bed surface selection and pause next layer.
[include klipper-macros/optional/lcd_menus.cfg]
# Optimized bed leveling
[include klipper-macros/optional/bed_mesh.cfg]
[exclude_object]
[save_variables]
filename: /home/pi/printer_data/config/save_variables.cfg
[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]

[output_pin beeper]
pin: v3:PB5

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_33FFD8055641343429612043-if00
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[mcu v3]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_12345-if00
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_accel_to_decel: 1500
max_z_velocity: 5
max_z_accel: 100

[force_move]
enable_force_move: true ; enable FORCE_MOVE and SET_KINEMATIC_POSITION

[bltouch]
stow_on_each_sample: false
probe_with_touch_mode: true
sensor_pin: ^v3:PC14
control_pin: v3:PA1
pin_move_time: 0.4
pin_up_touch_mode_reports_triggered: true
x_offset: 1
y_offset: -59
#z_offset: 0
speed: 50
lift_speed: 50
samples: 2
samples_result: median
samples_tolerance: 0.01
sample_retract_dist: 5
samples_tolerance_retries: 5

;[probe]
;pin: ^!v3:PA1
;x_offset: 0
;y_offset: -48
;#z_offset: 0
;speed: 50
;samples: 2
;samples_result: average
;samples_tolerance: 0.05
;sample_retract_dist: 3
;samples_tolerance_retries: 20

;[bed_screws]
;screw1: 202,92
;screw1_name: front right
;screw2: 33,92
;screw2_name: front left
;screw3: 33,223
;screw3_name: back left
;screw4: 202,223
;screw4_name: back right

[screws_tilt_adjust]
horizontal_move_z: 5
speed: 100
screw1: 201.5,91.5
screw1_name: front right
screw2: 31.5, 91.5
screw2_name: front left
screw3: 31.5, 223
screw3_name: back left
screw4: 201.5, 223
screw4_name: back right
screw_thread: CW-M4

[z_tilt]
z_positions: 
	-30,90       ##Stepper Location Z0, as if the nozzle were in the screw
	260,90       ##Stepper Location Z1, as if the nozzle were in the screw
points: 
    29, 176.5
    204, 176.5
speed: 50
horizontal_move_z: 6
retries: 20
retry_tolerance: 0.02

[safe_z_home]
home_xy_position: 235,-3
;home_xy_position: 117.5,165.5
speed: 100
z_hop: 20
z_hop_speed: 10

;[homing_override]
;gcode:
;    G90 ; Use absolute position mode
;    G1 Z10 ; Move up 10mm
;    G28 X Y
;    G1 X245
;    ;G1 X163.5 Y119.5 F6000 ; Change the X and Y coordinates to the center of your print bed
;    G28 Z
;    set_position_z: 0.0

[bed_mesh]
speed: 100
horizontal_move_z: 5
mesh_min: 30,30
mesh_max: 205,164
probe_count: 5,5
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 1
fade_end: 10.0
fade_target: 0
mesh_pps: 2,2
move_check_distance: 5
split_delta_z: 0.025
zero_reference_position: 117.5, 117.5

[gcode_macro SCREWS_TILT_CALCULAT]
gcode:
    G28 Z
    SCREWS_TILT_CALCULATE

# ======================================================================

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 0
position_min: 0
position_max: 244
homing_speed: 100
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
diag_pin: ^PC0
uart_address: 0
run_current: 0.58
#hold_current: 0.6
stealthchop_threshold: 0
driver_SGTHRS: 150
interpolate: false

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -3
position_min: -3
position_max: 223
homing_speed: 100
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
diag_pin: ^PC1
uart_address: 2
run_current: 0.85
#hold_current: 0.6
stealthchop_threshold: 0
driver_SGTHRS: 150
interpolate: false

[stepper_z]
step_pin: v3:PB13
dir_pin: v3:PB12
enable_pin: !v3:PB14
microsteps: 16
rotation_distance: 8
endstop_pin: ^v3:PC2
;endstop_pin: probe:z_virtual_endstop
#position_endstop: -0.050
position_min: -2
position_max: 250
homing_speed: 5

[tmc2209 stepper_z]
uart_pin: v3:PC11
tx_pin: v3:PC10
uart_address: 1
run_current: 0.7
;hold_current: 0.500
stealthchop_threshold: 0
interpolate: False

[stepper_z1]
step_pin: v3:PB0
dir_pin: v3:PC5
enable_pin: !v3:PB1
endstop_pin: ^v3:PC0
;endstop_pin: probe:z_virtual_endstop
microsteps: 16
rotation_distance: 8

[tmc2209 stepper_z1]
uart_pin: v3:PC11
tx_pin: v3:PC10
uart_address: 3
run_current: 0.7
;hold_current: 0.500
stealthchop_threshold: 0
interpolate: False

[endstop_phase stepper_z]
#endstop_accuracy:
#   Sets the expected accuracy (in mm) of the endstop. This represents
#   the maximum error distance the endstop may trigger (eg, if an
#   endstop may occasionally trigger 100um early or up to 100um late
#   then set this to 0.200 for 200um). The default is
#   4*rotation_distance/full_steps_per_rotation.
#trigger_phase=28/64
#   This specifies the phase of the stepper motor driver to expect
#   when hitting the endstop. It is composed of two numbers separated
#   by a forward slash character - the phase and the total number of
#   phases (eg, "7/64"). Only set this value if one is sure the
#   stepper motor driver is reset every time the mcu is reset. If this
#   is not set, then the stepper phase will be detected on the first
#   home and that phase will be used on all subsequent homes.
#endstop_align_zero: False
#   If true then the position_endstop of the axis will effectively be
#   modified so that the zero position for the axis occurs at a full
#   step on the stepper motor. (If used on the Z axis and the print
#   layer height is a multiple of a full step distance then every
#   layer will occur on a full step.) The default is False.

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD2
microsteps: 16
rotation_distance: 4.637
nozzle_diameter: 0.5
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 350
min_extrude_temp: 180
max_extrude_only_distance: 500
max_extrude_only_velocity: 120
pressure_advance_smooth_time: 0.04

pressure_advance: 0.025 ;Esun PLA+ 0.5 nozzle
;pressure_advance:0.948 ;Phaser3d PETG 0.5 nozzle

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.68
;hold_current: 0.85
stealthchop_threshold: 0
interpolate: true
sense_resistor: 0.11
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

;[firmware_retraction] ;PLA+ Sunlu 0.4
;retract_length: 2
;retract_speed: 60
;unretract_extra_length: 0
;unretract_speed: 60

;[firmware_retraction] ;TPU 0.6
;retract_length: 7
;retract_speed: 10
;unretract_extra_length: 0
;unretract_speed: 10

[firmware_retraction] ;PETG
retract_length: 1
retract_speed: 60
unretract_extra_length: 0
unretract_speed: 60

[gcode_macro SENSORLESS_HOME_X]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X0
    # Move away
    G90
    G1 X5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}

[gcode_macro SENSORLESS_HOME_Y]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X0
    # Move away
    G90
    G1 X5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}

[gcode_macro MECHANICAL_GANTRY_CALIBRATION]
gcode:
   {% set my_current = params.CURRENT|default(0.50)|float %} ; adjust crash current as required without fighting config.
    {% set oldcurrent = printer.configfile.settings["tmc2209 stepper_z"].run_current %} ; TODO: Find runtime current settings
    {% set oldhold = printer.configfile.settings["tmc2209 stepper_z"].hold_current %} 
    {% set x_max = printer.toolhead.axis_maximum.x %} 
    {% set y_max = printer.toolhead.axis_maximum.y %} 
    {% set z_max = printer.toolhead.axis_maximum.z %} 
    
    G28 ; todo query for homed
    G90 ; absolute
    G0 X{x_max / 2} Y{y_max / 2} F8000 ; TODO grab feedrate from config
    G0 Z{z_max} F720 ; go to the Z-max at speed 12*60
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={my_current}
    G4 P200 ; Probably not necessary, it is here just for sure
    FORCE_MOVE STEPPER=stepper_z DISTANCE=10 VELOCITY=6
    G4 P200 ; 
    FORCE_MOVE STEPPER=stepper_z DISTANCE=-10 VELOCITY=6
    G4 P200 ; same as the first one
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={oldcurrent} HOLDCURRENT={oldhold}
    G4 P200 ; same as the first one

[gcode_macro G34]
gcode:
    MECHANICAL_GANTRY_CALIBRATION

[gcode_macro Centre_Of_Bed]
gcode:
    G0 X116.5 Y176.5 F6000

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash /home/pi/klipper-backup/script.sh
timeout: 90.0
verbose: True

[gcode_macro _USE_INFILL_SQV]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sqv = svv.infill_sqv | default(printer.configfile.settings.printer.square_corner_velocity, true) %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ sqv }

[gcode_macro _USE_NORMAL_SQV]
gcode:
    {% set sqv = printer.configfile.settings.printer.square_corner_velocity %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ sqv }

[gcode_macro SET_INFILL_SQV]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set val = params.SQV|default(svv.infill_sqv|default(printer.configfile.settings.printer.square_corner_velocity, true), true) | int %}
    SAVE_VARIABLE VARIABLE=infill_sqv VALUE={val}

[gcode_macro save_time]
gcode:
    {% if printer.save_variables.variables.total_time %}
        {% set print_time = printer.save_variables.variables.total_time %}
    {% else %} 
        {% set print_time = 0 %}
    {% endif %}
    {% set print_time = print_time + printer.print_stats.print_duration/3600 %}
    SAVE_VARIABLE VARIABLE=total_time VALUE={print_time}

# Light & Neopixel
########################################    
[gcode_macro led_on]
gcode:
          SET_LED LED=status RED=1 GREEN=1 BLUE=1
[gcode_macro led_off]
gcode:
          SET_LED LED=status TYPE=clear    

[gcode_macro CALIBRATE] #dont forget to put on the probe. 
description: delta calibrate procedure. #extended delta calibrate in klipper docs should also be done at some point. 
gcode:
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  ENDSTOP_PHASE_CALIBRATE stepper=stepper_a
  ENDSTOP_PHASE_CALIBRATE stepper=stepper_b
  ENDSTOP_PHASE_CALIBRATE stepper=stepper_c
  DELTA_CALIBRATE
  DELTA_CALIBRATE
  DELTA_CALIBRATE
  DELTA_CALIBRATE
  DELTA_CALIBRATE 
  G28
  SAVE_CONFIG 

# rpi_ws281x library instructions for needed changes depending on GPIO pin used: https://github.com/jgarff/rpi_ws281x


# All customizations are documented in globals.cfg. Just copy a variable from
# there into the section below, and change the value to meet your needs.

[gcode_macro _km_options]

# These are examples of some likely customizations:
# Any sheets in the below list will be available with a configurable offset.
#variable_bed_surfaces: ['smooth_1','texture_1']
# Length (in mm) of filament to load (bowden tubes will be longer).
#variable_load_length: 90.0
# Hide the Octoprint LCD menu since I don't use it.
variable_menu_show_octoprint: False
variable_menu_show_sdcard: False
variable_start_try_saved_surface_mesh: True
variable_start_z_tilt_adjust_at_temp: False
variable_load_length: 40.0
# Customize the filament menus (up to 10 entries).
#variable_menu_temperature: 
#  {'name' : 'PLA',  'extruder' : 200.0, 'bed' : 60.0},
#  {'name' : 'PLA+',  'extruder' : 210.0, 'bed' : 60.0},
#  {'name' : 'PETG', 'extruder' : 230.0, 'bed' : 80.0},
#  {'name' : 'ABS',  'extruder' : 245.0, 'bed' : 110.0, 'chamber' : 60}]
# Length of filament (in millimeters) to purge at print start.
variable_start_purge_prime_length: 5
variable_start_bed_heat_delay: 0
variable_start_purge_length: 20 # This value works for most setups.
variable_start_purge_clearance: 10
variable_bed_surfaces: ['smooth','textured']
gcode: # This line is required by Klipper.
 GCODE_ON_PRINT_STATUS STATUS=all COMMAND=_SET_LED ARGS=1 WHEN=ALWAYS
# GCODE_ON_PRINT_STATUS STATUS=ready COMMAND="status_ready" 
# GCODE_ON_PRINT_STATUS STATUS=homing COMMAND="status_homing" 
# GCODE_ON_PRINT_STATUS STATUS=calibrating_z COMMAND="status_calibrating_z" 
# GCODE_ON_PRINT_STATUS STATUS=meshing COMMAND="status_meshing" 
# GCODE_ON_PRINT_STATUS STATUS=bed_heating COMMAND="status_heating" 
# GCODE_ON_PRINT_STATUS STATUS=printing  COMMAND="status_printing" 
# GCODE_ON_PRINT_STATUS STATUS=completing COMMAND="status_part_ready" 
# Any code you put here will run at klipper startup, after the initialization
# for these macros. For example, you could uncomment the following line to
# automatically adjust your bed surface offsets to account for any changes made
# to your Z endstop or probe offset.
#  ADJUST_SURFACE_OFFSETS

# The sections below here are required for the macros to work. If your config
# already has some of these sections you should merge the duplicates into one
# (or if they are identical just remove one of them).

[gcode_macro _set_led]
variable_debug: False
variable_states: {
  'ready': {'r': 0.01, 'g': 0.01, 'b': 0.01},
  'filament_load': {'r': 0.0, 'g': 0.4, 'b': 0.0},
  'filament_unload': {'r': 0.4, 'g': 0.0, 'b': 0.0},
  'bed_heating': {'r': 0.3, 'g': 0.18, 'b': 0.0},
  'chamber_heating': {'r': 0.3, 'g': 0.18, 'b': 0.0},
  'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2},
  'leveling_gantry': {'r': 0.8, 'g': 0., 'b': 0.35},
  'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35},
  'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0},
  'extruder_heating': {'r': 0.3, 'g': 0.18, 'b': 0.0},
  'purging': {'r': 1.0, 'g': 0.0, 'b': 0.0},
  'printing': {'r': 0.01, 'g': 0.01, 'b': 0.01},
  'pausing': {'r': 0.0, 'g': 0.02, 'b': 0.5},
  'pausing': {'r': 1.0, 'g': 0.0, 'b': 0.0},
  'cancelling': {'r': 1.0, 'g': 0.0, 'b': 0.0},
  'completing': {'r': 1.0, 'g': 0.0, 'b': 0.0},
  'off': {'r': 0.0, 'g': 0.0, 'b': 0.0},}
gcode:
  {% set s = states[params.NEXT_STATUS|default('off')] %}
  {% set LED = params.LED|default('status') %}

  {% if debug or params.DEBUG %} # Echo the command.
    M118 set_led led={LED} red={s.r} green={s.g} blue={s.b}
  {% endif %}
  set_led led={LED} red={s.r} green={s.g} blue={s.b}

[idle_timeout]
gcode:
  _KM_IDLE_TIMEOUT # This line must be in your idle_timeout section.

[respond]

[static_digital_output usb_pullup_enable]
pins: !PA14

[gcode_shell_command backup_cfg]
command: sh /home/pi/backup.sh
timeout: 30.
verbose: True

[gcode_macro GITHUB_BACKUP]
gcode:
    RUN_SHELL_COMMAND CMD=backup_to_github

#####################################################################
#  Heater Verification
#####################################################################
[verify_heater heater_bed]
max_error: 99999
check_gain_time: 120
hysteresis: 5
heating_gain: 2

[verify_heater extruder]
max_error: 99999
check_gain_time: 40
hysteresis: 5
heating_gain: 2

[display]
lcd_type: st7920
cs_pin: v3:PB8
sclk_pin: v3:PB9
sid_pin: v3:PD6
encoder_pins: ^v3:PA10, ^v3:PA9
click_pin: ^!v3:PA15

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[board_pins arduino-standard] 
aliases: ar0=PD0, ar1=PD1, ar2=PD2, ar3=PD3, ar4=PD4, ar5=PD5, ar6=PD6, 
          ar7=PD7, ar8=PB0, ar9=PB1, ar10=PB2, ar11=PB3, ar12=PB4, ar13=PB5, 
          ar14=PC0, ar15=PC1, ar16=PC2, ar17=PC3, ar18=PC4, ar19=PC5, analog0=PC0, 
          analog1=PC1, analog2=PC2, analog3=PC3, analog4=PC4, analog5=PC5, analog6=PE2, analog7=PE3

# See the sample-lcd.cfg file for definitions of common LCD displays.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.655
#*# pid_ki = 1.345
#*# pid_kd = 1008.153
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.521
#*# pid_ki = 1.080
#*# pid_kd = 117.390
#*#
#*# [input_shaper]
#*# shaper_type_y = mzv
#*# shaper_freq_y = 45.2
#*# shaper_type_x = mzv
#*# shaper_freq_x = 47.8
#*#
#*# [bed_mesh heated]
#*# version = 1
#*# points =
#*# 	-0.079816, 0.055184, -0.012316, 0.005184, -0.078566
#*# 	-0.148566, -0.034816, -0.069816, -0.008566, -0.058566
#*# 	-0.088566, 0.008934, -0.029816, -0.022316, -0.092316
#*# 	-0.111066, -0.021066, 0.013934, 0.007684, -0.037316
#*# 	-0.096066, 0.006434, -0.008566, -0.006066, -0.074816
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 205.0
#*# min_y = 30.0
#*# max_y = 164.0
#*#
#*# [stepper_z]
#*# position_endstop = -0.417
#*#
#*# [bltouch]
#*# z_offset = 2.340
#*#
#*# [bed_mesh cool]
#*# version = 1
#*# points =
#*# 	0.163753, 0.205003, 0.037503, 0.048753, 0.131253
#*# 	0.057503, 0.111253, 0.022503, 0.055003, 0.137503
#*# 	0.113753, 0.152503, -0.007497, 0.012503, 0.127503
#*# 	0.063753, 0.122503, 0.000003, 0.072503, 0.170003
#*# 	0.123753, 0.171253, 0.033753, 0.056253, 0.131253
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 209.0
#*# min_y = 30.0
#*# max_y = 164.0
#*#
#*# [bed_mesh 80]
#*# version = 1
#*# points =
#*# 	0.121664, 0.097914, -0.044586, 0.036664, -0.062086
#*# 	0.086664, 0.052914, -0.048336, 0.036664, -0.029586
#*# 	0.157914, 0.117914, -0.003336, 0.065414, -0.015836
#*# 	0.137914, 0.104164, -0.002086, 0.129164, 0.070414
#*# 	0.210414, 0.165414, 0.041664, 0.126664, 0.032914
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 209.0
#*# min_y = 30.0
#*# max_y = 164.0
#*#
#*# [bed_mesh 60]
#*# version = 1
#*# points =
#*# 	-0.014500, -0.162000, -0.179500, -0.039500, 0.029250
#*# 	-0.020750, -0.204500, -0.210750, -0.054500, -0.002000
#*# 	-0.023250, -0.179500, -0.197000, -0.047000, -0.013250
#*# 	-0.039500, -0.218250, -0.194500, 0.001750, 0.066750
#*# 	0.056750, -0.128250, -0.148250, 0.006750, 0.026750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 225.0
#*# min_y = 5.0
#*# max_y = 164.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.144688, 0.013438, -0.075312
#*# 	0.144688, 0.029688, -0.054062
#*# 	0.118438, 0.050938, -0.031562
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 51.96
#*# max_x = 151.62
#*# min_y = 78.85
#*# max_y = 156.15
